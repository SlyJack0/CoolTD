//Piirt‰‰ rakennuslaatiko
Function BuildMenu(x,y)
	i = 0
	maxWidth = 0
	
	//Etsit‰‰n pisin teksti ja s‰‰det‰‰n koko sen mukaan
	For iType.TOWERTYPE = Each TOWERTYPE
		tmpW = TextWidth(iType\name)
		tmpW2 = TextWidth("Damage: " + iType\damage)
		
		If tmpW2 > tmpW
			tmpW = tmpW2
		EndIf
		
		If tmpW > maxWidth
			maxWidth = tmpW
		EndIf
		
		i = i + 1
	Next iType
	
	//Pohjalaatikko
	Color cbBlack
	Box x,y,10 + GRID_SIZE + maxWidth,10 + i * (GRID_SIZE * 2.5),1
	Color 0,255,0
	Box x,y,10 + GRID_SIZE + maxWidth,10 + i * (GRID_SIZE * 2.5),0
	
	i = 0
	
	//Tornien piirto
	For iType.TOWERTYPE = Each TOWERTYPE
		tmpX = (x + 5)
		tmpY = (y + 5) + i * (GRID_SIZE * 2.5)
		
		If gShowBuildMenu = True
			If MouseX() > tmpX And MouseX() < (tmpX + GRID_SIZE) And MouseY() > tmpY And MouseY() < (tmpY + GRID_SIZE)
				Color 128,0,0
				Box tmpX,tmpY,GRID_SIZE,GRID_SIZE,0
				
				If MouseHit(1)
					gPlaceTower = True
					gSelectedTower = iType\id
					gShowBuildMenu = False
					Exit
				EndIf
			EndIf
		EndIf
		
		tmpX2 = tmpX + (GRID_SIZE - TOWER_SIZE) / 2
		tmpY2 = tmpY + (GRID_SIZE - TOWER_SIZE) / 2
		
		//Tornin kuva
		Color PeekByte(iType\clr,0),PeekByte(iType\clr,1),PeekByte(iType\clr,2)
		Box tmpX2,tmpY2,TOWER_SIZE,TOWER_SIZE,0
		Box tmpX2 + 3,tmpY2 + 3,TOWER_SIZE - 6,TOWER_SIZE - 6,1
		
		//Tornin tiedot
		Text tmpX + GRID_SIZE,tmpY,iType\name
		Text tmpX + GRID_SIZE,tmpY + 12,"Cost: " + iType\price
		Text tmpX + GRID_SIZE,tmpY + 24,"Damage: " + iType\damage
		Text tmpX + GRID_SIZE,tmpY + 36,"Range: " + iType\range
		
		If iType\special <> 0
			For k = 0 To MEMBlockSize(iType\special) - 2 Step 2
				tmpSpecial = PeekByte(iType\special,k)
				
				If tmpSpecial = SPECIAL_AIR
					Text tmpX + GRID_SIZE,tmpY + 48 + 12 * (k / 2),"Air targets"
				ElseIf tmpSpecial = SPECIAL_FREEZE
					Text tmpX + GRID_SIZE,tmpY + 48 + 12 * (k / 2),"Stops enemy"
				ElseIf tmpSpecial = SPECIAL_FIRE
					Text tmpX + GRID_SIZE,tmpY + 48 + 12 * (k / 2),"Ignites"
				EndIf
			Next k
		EndIf
		
		i = i + 1
	Next iType
EndFunction

//Piirt‰‰ tornin infolaatikon
Function TowerInfo(towerId)
	tTower.TOWER = ConvertToType(towerId)

	tmpW = TextWidth("Bullet speed: " + tTower\sSpeed) + 10
	tmpH = 58
	
	If tTower\special <> 0
		tmpH = tmpH + (MEMBlockSize(tTower\special) / 2) * 12
	EndIf
	
	tmpCount = CountUpgrades(tTower\id)
	If tmpCount > 0 And (tTower\level - 1) < tmpCount
		tmpH = tmpH + 29
	EndIf
	
	tmpX = tTower\x * GRID_SIZE + GRID_SIZE
	tmpY = tTower\y * GRID_SIZE
	
	If (tmpX + tmpW) > gScreenW
		tmpX = tTower\x * GRID_SIZE - tmpW
	EndIf
	
	If (tmpY + tmpH) > gScreenH
		tmpY = tmpY - tmpH
	EndIf
		
	//Pohjalaatikko
	Color cbBlack
	Box tmpX,tmpY,tmpW,tmpH,1
	Color PeekByte(tTower\clr,0),PeekByte(tTower\clr,1),PeekByte(tTower\clr,2)
	Box tmpX,tmpY,tmpW,tmpH,0
	
	//Tiedot
	Text tmpX + 5,tmpY + 5,"Damage: " + tTower\damage
	Text tmpX + 5,tmpY + 17,"Range: " + tTower\range
	Text tmpX + 5,tmpY + 29,"Reload t"+"ime: " + tTower\sSpeed
	Text tmpX + 5,tmpY + 41,"Bullet speed: " + tTower\bSpeed
	
	If tTower\special <> 0
		For k = 0 To MEMBlockSize(tTower\special) - 2 Step 2
			tmpSpecial = PeekByte(tTower\special,k)
			
			If tmpSpecial = SPECIAL_AIR
				Text tmpX + 5,tmpY + 53 + 12 * (k / 2),"Air targets"
			ElseIf tmpSpecial = SPECIAL_FREEZE
				Text tmpX + 5,tmpY + 53 + 12 * (k / 2),"Stops enemy"
			ElseIf tmpSpecial = SPECIAL_FIRE
				Text tmpX + 5,tmpY + 53 + 12 * (k / 2),"Ignites"
			EndIf
		Next k
	EndIf
	
	If tmpCount > 0 And (tTower\level - 1) < tmpCount
		tmp = Button(tmpX + 5,tmpY + tmpH - 29,"Upgrade (" + GetUpgradeProperty(tTower\id,tTower\level + 1,UP_PRICE) + ")")
	
		If tmp = 2
			UpgradeTower(tTower\id,tTower\level + 1)
		EndIf
	EndIf
EndFunction

//P‰‰valikko
Function MainMenu()
	Repeat		
		DrawGrid()

		Color 0,255,0
		CenterText gScreenW / 2,30,"Primitive-Defence"

		For i = 0 To 3
			Color 0,255,0
			tmp = Button(gScreenW / 2,100 + 37 * i,gMenuTexts(i),1)
			
			If tmp = 2
				Select i
					Case 0
						LevelMenu()
					Case 1
						setting = True
					Case 2
						//Credits
					Case 3
						End
				EndSelect
			EndIf
		Next i
		
		If setting = True
			SettingsMenu()
			setting = False
		EndIf
		
		DrawScreen
	Forever
EndFunction	

//Piirt‰‰ pausevalikon
Function PauseMenu()
	//Tallennetaan nykyinen tilanne kuvaan
	tmpImg = MakeImage(gScreenW,gScreenH)
	CopyBox 0,0,gScreenW,gScreenH,0,0,SCREEN(),Image(tmpImg)
	
	tmpW = 30 + TextWidth("Quit To menu")
	tmpH = 123
	
	tmpX = gScreenW / 2 - tmpW / 2
	tmpY = gScreenH / 2 - tmpH / 2
	
	Repeat
		DrawImage tmpImg,0,0

		//Pohjalaatikko
		Color cbBlack
		Box tmpX,tmpY,tmpW,tmpH,1
		Color 0,255,0
		Box tmpX,tmpY,tmpW,tmpH,0
		
		//Teksti
		CenterText tmpX + tmpW / 2,tmpY + 10,"Paused"
		
		For i = 0 To 2
			Color 0,255,0
			tmp = Button(tmpX + tmpW / 2,tmpY + 32 + i * 27,gPauseTexts(i),1)
			
			If tmp = 2
				Select i
					Case 0
						gLoopStart = Timer()
						Return True
					Case 1
						SettingsMenu()
					Case 2
						Return False
				EndSelect
			EndIf	
		Next i
		
		DrawScreen
	Until KeyHit(cbKeyEsc)
	
	gLoopStart = Timer()
	Return true
EndFunction

//Asetusvalikko
Function SettingsMenu()
	//Tallennetaan nykyinen tilanne kuvaan
	tmpImg = MakeImage(gScreenW,gScreenH)
	CopyBox 0,0,gScreenW,gScreenH,0,0,SCREEN(),Image(tmpImg)
	
	tmpW = 45 + TextWidth("Back") + TextWidth("Default settings")
	tmpH = 52 + 12 * SETTINGS_AMOUNT + 22
	
	tmpX = gScreenW / 2 - tmpW / 2
	tmpY = gScreenH / 2 - tmpH / 2
	
	Repeat
		DrawImage tmpImg,0,0

		//Pohjalaatikko
		Color cbBlack
		Box tmpX,tmpY,tmpW,tmpH,1
		Color 0,255,0
		Box tmpX,tmpY,tmpW,tmpH,0
		
		//Otsikkoteksti
		CenterText tmpX + tmpW / 2,tmpY + 10,"Settings"
		
		For i = 0 To SETTINGS_AMOUNT - 1
			Color 0,255,0
			tmp = ClickText(tmpX + 10,tmpY + 32 + i * 12,gSettingTexts(i,0))
			
			If gSettingTexts(i,1) = ""	//Jos asetuksella ON numeroarvo
				Text tmpX + 10 + TextWidth(gSettingTexts(i,0)),tmpY + 32 + i * 12,gSettings(i)
				
				If tmp = 1
					gSettings(i) = Max(0,Min(100,gSettings(i) + MouseMoveZ()))
				EndIf
			Else	//Jos asetus ON p‰‰lle/pois -tyyppinen
				Text tmpX + 10 + TextWidth(gSettingTexts(i,0)),tmpY + 32 + i * 12,gSettingTexts(i,gSettings(i) + 1)
				
				If tmp = 2
					gSettings(i) = Not gSettings(i)
				EndIf
			EndIf
		Next i
		
		Color 0,255,0
		back = Button(tmpX + 10,tmpY + 42 + 12 * SETTINGS_AMOUNT,"Back")
		Color 0,255,0
		def = Button(tmpX + 25 + TextWidth("Back"),tmpY + 42 + 12 * SETTINGS_AMOUNT,"Default settings")
		
		If back = 2
			Exit
		ElseIf def = 2
			DefaultSettings()
		EndIf
		
		SetSound gMusicChannel,OFF,gSettings(SETTING_MVOLUME)
		
		DrawScreen
	Until KeyHit(cbKeyEsc)
	
	SaveSettings()
EndFunction

//Kent‰nvalintaruutu
Function LevelMenu()
	ClearMouse
	
	lvlAmount = GetPathAmount()
	rows = RoundUp(lvlAmount / 4)
	
	Repeat
		i = 0
		
		DrawGrid()
		
		Color 0,255,0
		CenterText gScreenW / 2,30,"Select level"
		
		For row = 1 To rows
			For col = -2 To 1
				i = i + 1
				
				If i > lvlAmount
					Exit
				EndIf
				
				Color 0,255,0
				tmp = Button(gScreenW / 2 + 5 + col * (TextWidth(i) + 20),100 + 37 * (row - 1),i)
				
				If tmp = 2
					LoadPath(i)
					InitGame()
					Run()
				EndIf
			Next col
		Next row
		
		Color 0,255,0
		random = Button(gScreenW / 2,100 + (rows) * 37,"Generate level",1)
		Color 0,255,0
		back = Button(gScreenW / 2,100 + (rows + 1) * 37,"Back",1)
		
		If random = 2
			RandomPath()
			InitGame()
			Run()
		ElseIf back = 2
			Exit
		EndIf
		
		DrawScreen
	Until KeyHit(cbKeyEsc)
EndFunction

//Piirt‰‰ napin
Function Button(x,y,t$,center=0)
	tmpW = 10 + TextWidth(t$)
	tmpH = 10 + TextHeight(t$)
	
	If center = 1
		tmpX = x - tmpW / 2
	Else
		tmpX = x
	EndIf
	
	r = getRGB(RED)
	g = getRGB(GREEN)
	b = getRGB(BLUE)
	
	//Pohjalaatikko
	Color cbBlack
	Box tmpX,y,tmpW,tmpH,1

	If MouseX() > tmpX And MouseX() < (tmpX + tmpW) And MouseY() > y And MouseY() < (y + tmpH)
		Color r / 2,g / 2,b / 2
		hover = True
	Else
		Color r,g,b
		hover = False
	EndIf
	
	Box tmpX,y,tmpW,tmpH,0
	Text tmpX + 5,y + 5,t$
	
	Return hover + MouseHit(1)
EndFunction

//Klikattava teksti
Function ClickText(x,y,t$)
	tmpW = TextWidth(t$)
	tmpH = TextHeight(t$)
	
	r = getRGB(RED)
	g = getRGB(GREEN)
	b = getRGB(BLUE)
	
	If MouseX() > x And MouseX() < (x + tmpW) And MouseY() > y And MouseY() < (y + tmpH)
		Color r / 2,g / 2,b / 2
		hover = True
	Else
		Color r,g,b
		hover = False
	EndIf
	
	Text x,y,t$
	
	Return hover + MouseHit(1)
EndFunction
	